import json
from aiogram.utils.markdown import hbold, hlink
from aiogram import Bot, Dispatcher, executor, types
from aiogram.dispatcher.filters import Text
import time
import requests
from main import get_data, get_result


API_Token = "5870227266:AAFmBhp3S11pL7Xh30qdjsR2o9gJqyXTjG4"
bot = Bot(token=API_Token, parse_mode=types.ParseMode.HTML)
dp = Dispatcher(bot)

@dp.message_handler(commands='start')
async def start(message: types.Message):
    start_buttons = ['–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä—ã', '–í–∏–¥–µ–æ–∫–∞—Ä—Ç—ã', '–ú–∞—Ç–µ—Ä–∏–Ω—Å–∫–∏–µ –ø–ª–∞—Ç—ã', '–ñ–µ—Å—Ç–∫–∏–µ –¥–∏—Å–∫–∏', '–û–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–º—è—Ç—å', '–ë–ª–æ–∫–∏ –ø–∏—Ç–∞–Ω–∏—è', '–ö–æ—Ä–ø—É—Å–∞', '–°–∏—Å—Ç–µ–º—ã –æ—Ö–ª–∞–∂–¥–µ–Ω–∏—è']
    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(*start_buttons)

    await message.answer('–í—ã–±–µ–∏—Ä—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é', reply_markup=keyboard)

@dp.message_handler(Text(equals='–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä—ã'))
async def get_discount_knives(message: types.Message):
    await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ...')

    get_data(catagory_type=5431)
    get_result()

    with open('data/5_bot_res.json', encoding='utf-8') as file:
        data = json.load(file)

    for index, item in enumerate(data):
        card = f'{hlink(item.get("name"), item.get("link"))}\n' \
               f'{hbold("–¶–µ–Ω–∞ –¥–æ —Å–∫–∏–¥–∫–∏: ")}‚ÇΩ{item.get("basePrice")}\n' \
               f'{hbold("–¶–µ–Ω–∞ –ø–æ—Å–ª–µ —Å–∫–∏–¥–∫–∏: ")}‚ÇΩ{item.get("salePrice")}üî•\n' \
               f'{hbold("–ë–æ–Ω—É—Å—ã: ")}{item.get("bonus")}üç™\n'

        if index % 20 == 0:
            time.sleep(5)

        await message.answer(card)

@dp.message_handler(Text(equals='–í–∏–¥–µ–æ–∫–∞—Ä—Ç—ã'))
async def get_discount_knives(message: types.Message):
    await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ...')

    get_data(catagory_type=5429)
    get_result()

    with open('data/5_bot_res.json', encoding='utf-8') as file:
        data = json.load(file)

    for index, item in enumerate(data):
        card = f'{hlink(item.get("name"), item.get("link"))}\n' \
               f'{hbold("–¶–µ–Ω–∞ –¥–æ —Å–∫–∏–¥–∫–∏: ")}‚ÇΩ{item.get("basePrice")}\n' \
               f'{hbold("–¶–µ–Ω–∞ –ø–æ—Å–ª–µ —Å–∫–∏–¥–∫–∏: ")}‚ÇΩ{item.get("salePrice")}üî•\n' \
               f'{hbold("–ë–æ–Ω—É—Å—ã: ")}{item.get("bonus")}üç™\n'

        if index % 20 == 0:
            time.sleep(5)

        await message.answer(card)

@dp.message_handler(Text(equals='–ú–∞—Ç–µ—Ä–∏–Ω—Å–∫–∏–µ –ø–ª–∞—Ç—ã'))
async def get_discount_knives(message: types.Message):
    await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ...')

    get_data(catagory_type=5432)
    get_result()

    with open('data/5_bot_res.json', encoding='utf-8') as file:
        data = json.load(file)

    for index, item in enumerate(data):
        card = f'{hlink(item.get("name"), item.get("link"))}\n' \
               f'{hbold("–¶–µ–Ω–∞ –¥–æ —Å–∫–∏–¥–∫–∏: ")}‚ÇΩ{item.get("basePrice")}\n' \
               f'{hbold("–¶–µ–Ω–∞ –ø–æ—Å–ª–µ —Å–∫–∏–¥–∫–∏: ")}‚ÇΩ{item.get("salePrice")}üî•\n' \
               f'{hbold("–ë–æ–Ω—É—Å—ã: ")}{item.get("bonus")}üç™\n'

        if index % 20 == 0:
            time.sleep(5)

        await message.answer(card)

@dp.message_handler(Text(equals='–ñ–µ—Å—Ç–∫–∏–µ –¥–∏—Å–∫–∏'))
async def get_discount_knives(message: types.Message):
    await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ...')

    get_data(catagory_type=5436)
    get_result()

    with open('data/5_bot_res.json', encoding='utf-8') as file:
        data = json.load(file)

    for index, item in enumerate(data):
        card = f'{hlink(item.get("name"), item.get("link"))}\n' \
               f'{hbold("–¶–µ–Ω–∞ –¥–æ —Å–∫–∏–¥–∫–∏: ")}‚ÇΩ{item.get("basePrice")}\n' \
               f'{hbold("–¶–µ–Ω–∞ –ø–æ—Å–ª–µ —Å–∫–∏–¥–∫–∏: ")}‚ÇΩ{item.get("salePrice")}üî•\n' \
               f'{hbold("–ë–æ–Ω—É—Å—ã: ")}{item.get("bonus")}üç™\n'

        if index % 20 == 0:
            time.sleep(5)

        await message.answer(card)

@dp.message_handler(Text(equals='–û–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–º—è—Ç—å'))
async def get_discount_knives(message: types.Message):
    await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ...')

    get_data(catagory_type=5433)
    get_result()

    with open('data/5_bot_res.json', encoding='utf-8') as file:
        data = json.load(file)

    for index, item in enumerate(data):
        card = f'{hlink(item.get("name"), item.get("link"))}\n' \
               f'{hbold("–¶–µ–Ω–∞ –¥–æ —Å–∫–∏–¥–∫–∏: ")}‚ÇΩ{item.get("basePrice")}\n' \
               f'{hbold("–¶–µ–Ω–∞ –ø–æ—Å–ª–µ —Å–∫–∏–¥–∫–∏: ")}‚ÇΩ{item.get("salePrice")}üî•\n' \
               f'{hbold("–ë–æ–Ω—É—Å—ã: ")}{item.get("bonus")}üç™\n'

        if index % 20 == 0:
            time.sleep(5)

        await message.answer(card)

@dp.message_handler(Text(equals='–ë–ª–æ–∫–∏ –ø–∏—Ç–∞–Ω–∏—è'))
async def get_discount_knives(message: types.Message):
    await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ...')

    get_data(catagory_type=5435)
    get_result()

    with open('data/5_bot_res.json', encoding='utf-8') as file:
        data = json.load(file)

    for index, item in enumerate(data):
        card = f'{hlink(item.get("name"), item.get("link"))}\n' \
               f'{hbold("–¶–µ–Ω–∞ –¥–æ —Å–∫–∏–¥–∫–∏: ")}‚ÇΩ{item.get("basePrice")}\n' \
               f'{hbold("–¶–µ–Ω–∞ –ø–æ—Å–ª–µ —Å–∫–∏–¥–∫–∏: ")}‚ÇΩ{item.get("salePrice")}üî•\n' \
               f'{hbold("–ë–æ–Ω—É—Å—ã: ")}{item.get("bonus")}üç™\n'

        if index % 20 == 0:
            time.sleep(5)

        await message.answer(card)

@dp.message_handler(Text(equals='–ö–æ—Ä–ø—É—Å–∞'))
async def get_discount_knives(message: types.Message):
    await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ...')

    get_data(catagory_type=5434)
    get_result()

    with open('data/5_bot_res.json', encoding='utf-8') as file:
        data = json.load(file)

    for index, item in enumerate(data):
        card = f'{hlink(item.get("name"), item.get("link"))}\n' \
               f'{hbold("–¶–µ–Ω–∞ –¥–æ —Å–∫–∏–¥–∫–∏: ")}‚ÇΩ{item.get("basePrice")}\n' \
               f'{hbold("–¶–µ–Ω–∞ –ø–æ—Å–ª–µ —Å–∫–∏–¥–∫–∏: ")}‚ÇΩ{item.get("salePrice")}üî•\n' \
               f'{hbold("–ë–æ–Ω—É—Å—ã: ")}{item.get("bonus")}üç™\n'

        if index % 20 == 0:
            time.sleep(5)

        await message.answer(card)

@dp.message_handler(Text(equals='–°–∏—Å—Ç–µ–º—ã –æ—Ö–ª–∞–∂–¥–µ–Ω–∏—è'))
async def get_discount_knives(message: types.Message):
    await message.answer('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ...')

    get_data(catagory_type=6127)
    get_result()

    with open('data/5_bot_res.json', encoding='utf-8') as file:
        data = json.load(file)

    for index, item in enumerate(data):
        card = f'{hlink(item.get("name"), item.get("link"))}\n' \
               f'{hbold("–¶–µ–Ω–∞ –¥–æ —Å–∫–∏–¥–∫–∏: ")}‚ÇΩ{item.get("basePrice")}\n' \
               f'{hbold("–¶–µ–Ω–∞ –ø–æ—Å–ª–µ —Å–∫–∏–¥–∫–∏: ")}‚ÇΩ{item.get("salePrice")}üî•\n' \
               f'{hbold("–ë–æ–Ω—É—Å—ã: ")}{item.get("bonus")}üç™\n'

        if index % 20 == 0:
            time.sleep(5)

        await message.answer(card)


def main():
    executor.start_polling(dp)


if __name__ == '__main__':
    main()